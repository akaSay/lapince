generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  password      String
  avatar        String?
  membershipType String   @default("FREE")
  isEmailVerified Boolean @default(false)
  language      String    @default("fr")
  currency      String    @default("EUR")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resetToken        String?   @unique
  resetTokenExpiry  DateTime?
  refreshToken    String?

  transactions  Transaction[]
  budgets       Budget[]
  notifications Notification[]
  settings      Settings?
  savingsGoals  SavingsGoal[]
}

model Transaction {
  id          String   @id @default(uuid())
  description String
  amount      Float
  date        DateTime
  category    String
  type        String   // "income" | "expense"
  categoryIcon String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Budget {
  id          String   @id @default(uuid())
  category    String
  limit       Float
  icon        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Notification {
  id        String   @id @default(uuid())
  title     String
  message   String
  type      String   // "info" | "warning" | "success" | "danger"
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Settings {
  id            String   @id @default(uuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  theme         String   @default("dark")
  language      String   @default("fr")
  currency      String   @default("EUR")
  notifications Json?    @default("{\"email\":false,\"push\":false,\"budget\":false,\"weekly\":false,\"monthly\":false}")
  privacy       Json?    @default("{\"showProfile\":false,\"showStats\":false,\"showBudget\":false}")
  export        Json?    @default("{\"format\":\"csv\",\"frequency\":\"monthly\"}")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model SavingsGoal {
  id        String   @id @default(uuid())
  userId    String
  target    Float
  current   Float
  month     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, month])
} 